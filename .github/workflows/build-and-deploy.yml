name: Build and Deploy Flask App

on:
  push:
  workflow_dispatch:

jobs:
  build-and-deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Authenticate with Google Cloud"
        uses: google-github-actions/auth@v0.4.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: "Prepare Flask server directory and install required packages"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo apt update
            sudo apt install -y python3.12 python3.12-venv python3-pip
            sudo rm -rf /opt/flask-app
            sudo mkdir -p /opt/flask-app
            sudo chown -R ${{ secrets.SSH_USERNAME }} /opt/flask-app
            sudo mkdir -p /var/log/flask-app
            sudo chown ${{ secrets.SSH_USERNAME }}: /var/log/flask-app

      - name: "Copy Flask app to server"
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./api/*"
          target: "/opt/flask-app"
          overwrite: true
          # strip_components: 1

      - name: "Install Python dependencies on server"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/flask-app/
            python3.12 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r api/requirements.txt

      - name: "Set GOOGLE_APPLICATION_CREDENTIALS"
        run: |
          echo "${{ secrets.GCP_CREDENTIALS_BASE64 }}" | base64 --decode > /tmp/gcp-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-credentials.json

      - name: "Set JWT_SECRET_KEY"
        run: |
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> /tmp/.env
          export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

      - name: "Set GCP_API_KEY"
        run: |
          echo "GCP_API_KEY=${{ secrets.GCP_API_KEY }}" >> /tmp/.env
          export GCP_API_KEY=${{ secrets.GCP_API_KEY }}
        

      - name: "Kill existing Flask process"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            bash /opt/flask-app/api/scripts/kill.sh

      - name: "Start Flask app using gunicorn"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/flask-app
            source venv/bin/activate
            export PYTHONPATH=/opt/flask-app
            nohup gunicorn --workers 3 --bind 0.0.0.0:8000 api.wsgi:app \
            --log-level=info --access-logfile /var/log/flask-app/access.log \
            --log-file /var/log/flask-app/flask.log > /var/log/flask_run.log 2>&1 &


      - name: "Restart Nginx"
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl reload nginx
